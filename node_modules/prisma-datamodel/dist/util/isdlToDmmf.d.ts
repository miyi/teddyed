import { ISDL } from '../datamodel/model';
export declare namespace DMMF {
    interface Datamodel {
        models: Model[];
        enums: Enum[];
    }
    interface Enum {
        name: string;
        values: string[];
        dbName?: string | null;
    }
    interface DataSource {
        type: string;
        url: string;
        name: string;
    }
    interface Model {
        name: string;
        isEmbedded: boolean;
        dbName: string | null;
        fields: Field[];
        [key: string]: any;
    }
    type FieldKind = 'scalar' | 'object' | 'enum';
    interface Field {
        kind: FieldKind;
        name: string;
        isRequired: boolean;
        isList: boolean;
        isUnique: boolean;
        isId: boolean;
        type: string;
        dbName: string | null;
        isGenerated: boolean;
        relationToFields?: any[];
        relationOnDelete?: string;
        relationName?: string;
        isUpdatedAt: boolean;
        default?: {
            name: string;
            returnType: string;
            args: any[];
        };
        [key: string]: any;
    }
}
export declare function isdlToDmmfDatamodel(isdl: ISDL, dataSources?: DMMF.DataSource[]): {
    dmmf: DMMF.Datamodel;
    dataSources: DMMF.DataSource[];
};
