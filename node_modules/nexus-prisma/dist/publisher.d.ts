import * as Nexus from 'nexus';
import { CustomInputArg } from './builder';
import * as DMMF from './dmmf';
export declare class Publisher {
    protected dmmf: DMMF.DMMF;
    protected publishedTypesMap: Record<string, boolean>;
    constructor(dmmf: DMMF.DMMF, publishedTypesMap: Record<string, boolean>);
    inputType(customArg: CustomInputArg): string | Nexus.core.NexusInputObjectTypeDef<string> | Nexus.core.NexusEnumTypeDef<string> | Nexus.core.NexusScalarTypeDef<string> | Nexus.core.NexusArgDef<any>;
    outputType(outputTypeName: string, field: DMMF.Data.SchemaField): any;
    protected publishObject(name: string): Nexus.core.NexusObjectTypeDef<string>;
    protected publishScalar(typeName: string): string | Nexus.core.NexusScalarTypeDef<string>;
    protected publishEnum(typeName: string): Nexus.core.NexusEnumTypeDef<string>;
    protected publishInputObjectType(inputType: DMMF.Data.InputType): Nexus.core.NexusInputObjectTypeDef<string>;
    protected getTypeFromArg(arg: DMMF.Data.SchemaArg): {
        name: string;
    };
    protected isPublished(typeName: string): boolean;
    protected markTypeAsPublished(typeName: string): void;
}
//# sourceMappingURL=publisher.d.ts.map