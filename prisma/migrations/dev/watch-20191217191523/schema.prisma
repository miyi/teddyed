generator photon {
  provider = "photonjs"
}

datasource db {
  provider = "sqlite"
  url = "***"
}

model User {
  id      String    @default(cuid()) @id
  email   String    @unique
  name    String?
  posts   Post[]
  student Student[] @relation(name: "UserStudents")
}

model Student {
  id        String  @default(cuid()) @id
  firstName String?
  LastName  String?
  age       Int?
  gender    Gender  @default(MALE)
  user      User @relation(name: "UserStudents")
}

model Post {
  id        String   @default(cuid()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(true)
  title     String
  content   String?
  author    User
}

model Provider {
  id          String       @default(cuid()) @id
  email       String       @unique
  name        String?
  listings    Listing[]
  instructors Instructor[] @relation(name: "ProviderInstructors")
  eventStore Event[] @relation(name: "ProviderEvents")
}

model Instructor {
  id        String   @default(cuid()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  firstName String
  lastName  String
  gender Gender
  age Int
  provider  Provider @relation(name: "ProviderInstructors")
  eventStore Event[] @relation(name: "EventsInstructors")
}

model Event {
  id         String     @default(cuid()) @id
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  listing Listing @relation(name: "ListingEvents")
  from DateTime
  to DateTime 
  provider   Provider @relation(name: "ProviderEvents")
  instructors Instructor[] @relation(name: "EventsInstructors")
  students Student[] @relation(name: "EventsStudents")
}

model Listing {
  id          String       @default(cuid()) @id
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  title       String
  content     String?
  owner       Provider
  instructors Instructor[]
  EventStore Event[] @relation(name: "ListingEvents")
}

enum Gender {
  MALEÂ 
  FEMALE
}